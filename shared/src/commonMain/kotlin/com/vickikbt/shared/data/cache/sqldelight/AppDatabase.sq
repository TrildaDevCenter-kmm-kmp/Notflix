CREATE TABLE MovieEntity(
adult INTEGER AS Boolean DEFAULT NULL,
backdropPath TEXT DEFAULT NULL,
id INTEGER AS Int DEFAULT NULL,
originalLanguage TEXT DEFAULT NULL,
originalTitle TEXT DEFAULT NULL,
overview TEXT DEFAULT NULL,
popularity REAL DEFAULT NULL,
posterPath TEXT DEFAULT NULL,
releaseDate TEXT DEFAULT NULL,
title TEXT DEFAULT NULL,
video INTEGER AS Boolean DEFAULT NULL,
voteAverage REAL DEFAULT NULL,
voteCount INTEGER AS Int DEFAULT NULL,
category TEXT DEFAULT NULL,
isFavourite INTEGER AS Boolean DEFAULT FALSE,
cacheId INTEGER AS Int DEFAULT 0 PRIMARY KEY
);

saveMovies:
INSERT OR REPLACE INTO MovieEntity(adult, backdropPath,id,originalLanguage,originalTitle,overview,popularity,posterPath,releaseDate,title,video,voteAverage,voteCount,category,isFavourite,cacheId)
VALUES ?;

getNowPlayingMovies:
SELECT * FROM MovieEntity WHERE category=?;

getMovies:
SELECT * FROM MovieEntity WHERE category=?;

deleteMovies:
DELETE FROM MovieEntity WHERE category=? AND isFavourite IS NOT TRUE;

isCategoryCacheAvailable:
SELECT COUNT(*) FROM MovieEntity WHERE category=?;

getFavouriteMovies:
SELECT * FROM MovieEntity WHERE isFavourite=TRUE;

isMovieFavourite:
SELECT isFavourite FROM MovieEntity WHERE id=? AND isFavourite=TRUE;

updateIsMovieFavorite:
UPDATE MovieEntity
SET `isFavourite`=? WHERE cacheId=?;



CREATE TABLE MovieDetailsEntity(
adult INTEGER AS Boolean DEFAULT NULL,
backdropPath TEXT DEFAULT NULL,
homepage TEXT DEFAULT NULL,
id INTEGER AS Int UNIQUE NOT NULL PRIMARY KEY,
imdbId TEXT DEFAULT NULL,
originalLanguage TEXT DEFAULT NULL,
originalTitle TEXT DEFAULT NULL,
overview TEXT DEFAULT NULL,
popularity REAL DEFAULT NULL,
posterPath TEXT DEFAULT NULL,
releaseDate TEXT DEFAULT NULL,
runtime INTEGER AS Int DEFAULT NULL,
status TEXT DEFAULT NULL,
tagline TEXT DEFAULT NULL,
title TEXT DEFAULT NULL,
video INTEGER AS Boolean  DEFAULT NULL,
voteAverage REAL DEFAULT NULL,
voteCount INTEGER AS Int DEFAULT NULL
);

saveMovieDetails:
INSERT OR REPLACE INTO MovieDetailsEntity(adult, backdropPath,homepage,id,imdbId,originalLanguage,originalTitle,overview,popularity,posterPath,releaseDate,runtime,status,tagline,title,video,voteAverage,voteCount)
VALUES ?;

getMovieDetails:
SELECT * FROM MovieDetailsEntity WHERE id=?;

deleteAllMovieDetais:
DELETE FROM MovieDetailsEntity;

isMovieDetailsAvailable:
SELECT COUNT(*) FROM MovieDetailsEntity WHERE id=?;


-- CREATE TABLE CastEntity(
-- actor TEXT AS List<ActorEntity>,
-- id INTEGER AS Int UNIQUE NOT NULL PRIMARY KEY
-- );
--
-- CREATE TABLE ActorEntity(
-- castId INTEGER AS Int DEFAULT NULL,
-- character TEXT DEFAULT NULL,
-- creditId TEXT DEFAULT NULL,
-- id INTEGER AS Int DEFAULT NULL,
-- name TEXT DEFAULT NULL,
-- originalName TEXT DEFAULT NULL,
-- profilePath TEXT DEFAULT NULL
-- );

